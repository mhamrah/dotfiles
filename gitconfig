[user]
  name = Michael Hamrah
  email = mlh@uber.com

[core]
  autocrlf = input
  editor = vim
	excludesfile = /Users/mhamrah/.gitignore_global

[push]
  default = current

[branch]
  autosetuprebase = always
  autosetupmerge = true

[credential]
  helper = osxkeychain

[color]
  ui = true
  branch = auto
  diff = auto
  status = auto

[color "branch"]
  current = red reverse
  local = blue
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[alias]
  st = status -s

  cl = clone

  ci = commit
  cm = commit -m
  cma = commit -a -m
  cam = commit -a -m
  c = commit -a -m
  ca = commit --amend
  amend = commit --amend
  caa = commit -a --amend -C HEAD
  filelog = log -u
  fl = log -u

  ai = add --interactive

  co = checkout
  cob = checkout -b
  br = branch 
#"!git branch -ra | grep -v done"
  bra = branch -ra
#list commands
  le = log --oneline --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  ls1 = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
  lds = log --pretty=format:"%C(yellow)%h\\ %C(green)%ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short --graph --abbrev-commit
  ls = log --pretty=format:"%C(green)%h\\ %C(yellow)[%ad]%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
#list all aliases
  la = "log --oneline --all --graph --oneline --decorate"
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  diff = diff --word-diff
  d = diff --word-diff
  dc = diff --cached
#list modified files in last commit
  dl = "!git ll -1"
#diff last commit
  dlc = diff --cached HEAD^
  dr  = "!f() { git diff -w "$1"^.."$1"; }; f"
  diffr  = "!f() { git diff "$1"^.."$1"; }; f"
#reset commands
  r = reset
  r1 = reset HEAD^
  r2 = reset HEAD^^
  rh = reset --hard
  rh1 = reset HEAD^ --hard
  rh2 = reset HEAD^^ --hard
  ec = config --global -e
  up = git pull --rebase --prune 
#prune
  po = remote prune origin
#stash
  sl = stash list
  sa = stash apply
  ss = stash save

  rb = rebase -i master
  p = push
  cp = cherry-pick
  grep = grep -Ii
  gr = grep -Ii
#grep from root folder
  gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
#grep on filename
  f = "!git ls-files | grep -i"

#rename branch tree to done-
  done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"

#assume aliases
  assume = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
#show assumed files
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"
                                                                                                                                                                                                                                                                      #unassume all the assumed files
  unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
  assumeall = "!git st -s | awk {'print $2'} | xargs git assume"

  lasttag = describe --tags --abbrev=0
  lt = describe --tags --abbrev=0

#merges
  ours = "!f() { git co --ours $@ && git add $@; }; f"
  theirs = "!f() { git co --theirs $@ && git add $@; }; f"

#submodules
  su = submodule update --init --recursive
#list remotes
  rem="!git config -l | grep remote.*url | tail -n +2"

#apply patch from other local repo
  lap = "!f() { git --git-dir=$1 format-patch -k -1 --stdout $2 | git am -3 -k; }; f"

#subtree add
  sba = "!f() { git subtree add --prefix $2 $1 master --squash; }; f" 
  alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
# }}}

[rerere]
  enabled = true
[filter "media"]
  required = true
  clean = git media clean %f
  smudge = git media smudge %f
[url "ssh://gitolite@code.uber.internal/"]
  insteadOf = git://code.uber.internal/
[url "ssh://git@github.com/uber/"]
  insteadOf = https://github.com/uber/
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[remote "origin"]
	prune = true
[url "ssh://gitolite@code.uber.internal:2222/"]
	insteadOf = https://code.uber.internal/
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /opt/homebrew-cask/Caskroom/sourcetree/2.3/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[fetch]
	prune = true
[rebase]
	autosquash = true
